Тестовое задание на должность Java backend разработчика

Предусловие:
Язык программирования: Java 8;
Frameworks: Spring Boot Starter, Spring Web, Spring JPA, Spring Hibernate;
База данных: Postgres SQL;
Библиотека для генерации документации: springdoc-openapi v1.5.9

Ход работ:
Необходимо реализовать реестр техники (телевизоры, пылесосы, холодильники, смартфоны и ПК)
 с привязкой к ним моделей с собственными характеристиками. Например, смартфоны Iphone имеют
 ряд общих атрибутов, равных для всей линейки, но каждая модель линейки имеет собственные характеристики.
В роли сущностей должен выступать вид техники: Телевизор, пылесос, холодильник, смартфон и ПК.


 Атрибуты сущности:

 Наименование,
 Страна производитель,
 Фирма производитель,
 возможность заказа онлайн(да/нет),
 возможность оформления рассрочки(да/нет),
 модели в наличии
      (выборка из моделей, которые представлены в виде справочника).



Сами модели должны иметь ряд атрибутов в зависимости от вида техники:

Телевизоры: наименование, серийный номер, цвет, размер, цена,
категория, технология, наличие товара (Да/Нет);

Пылесосы: наименование, серийный номер, цвет, размер, цена,
объём пылесборника, количество режимов, наличие товара (Да/Нет);

Холодильники: наименование, серийный номер, цвет, размер, цена,
количество дверей, тип компрессора, наличие товара (Да/Нет);

Смартфоны: наименование, серийный номер, цвет, размер, цена,
память, количество камер, наличие товара (Да/Нет);

Компьютеры: наименование, серийный номер, цвет, размер, цена,
категория, тип процессора, наличие товара (Да/Нет);



В реестр достаточно добавить по три позиции на каждый вид техники с двумя моделями для каждой.
По выделенным атрибутам необходимо реализовать поиск по наименованию,
вне зависимости от регистра, а также реализовать фильтрацию по виду техники, цвету, цене (от/до).
Остальные фильтры сделать зависимыми от выбора вида техники и фильтровать по атрибутам моделей.
Реализовать сортировку реестра техники по алфавиту и по стоимости;
Реализовать возможность добавлять новые позиции и модели к ним, в зависимости от выбранного вида техники.

Ожидаемый результат:
REST-приложение с Open API v3 документацией в виде страницы swagger.
Доступ к репозиторию с исходниками приложения.
README файл с инструкцией для запуска.


=========================================

create database registry
	with owner postgres;

create table computers
(
    id             bigint  not null
        constraint computers_pkey
            primary key,
    availability   boolean not null,
    category       varchar(255),
    processor_type varchar(255),
    color          varchar(255),
    price          numeric(19, 2),
    serial_number  varchar(255),
    size           varchar(255),
    title          varchar(255)
);

alter table computers
    owner to postgres;

create table refrigerators
(
    id              bigint  not null
        constraint refrigerators_pkey
            primary key,
    availability    boolean not null,
    compressor_type varchar(255),
    doors_count     integer,
    color           varchar(255),
    price           numeric(19, 2),
    serial_number   varchar(255),
    size            varchar(255),
    title           varchar(255)
);

alter table refrigerators
    owner to postgres;

create table smartphones
(
    id            bigint  not null
        constraint smartphones_pkey
            primary key,
    availability  boolean not null,
    cameras_count integer,
    color         varchar(255),
    price         numeric(19, 2),
    serial_number varchar(255),
    size          varchar(255),
    title         varchar(255)
);

alter table smartphones
    owner to postgres;

create table vacuum_cleaners
(
    id                    bigint  not null
        constraint vacuum_cleaners_pkey
            primary key,
    availability          boolean not null,
    dust_container_volume integer,
    modes_count           integer
);

alter table vacuum_cleaners
    owner to postgres;

create table tv
(
    id            bigserial not null
        constraint tv_pkey
            primary key,
    availability  boolean   not null,
    category      varchar(255),
    color         varchar(255),
    price         numeric(19, 2),
    serial_number varchar(255),
    size          varchar(255),
    technology    varchar(255),
    title         varchar(255)
);

alter table tv
    owner to postgres;